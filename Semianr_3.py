# Создать тестовый файл, записать в него построчно данные, которые вводит пользователь.
# Окончанием ввода пусть служит пустая строка.

# fname = input('файл:')
# f = open(fname, 'w')
# while True:   # бесконечный цикл
#     s = input()
#     if s =="":   # условие, при котором цикл завершится
#         break  # конец. continue - следующая итерация
#     f.write(s+"\n")
# f.close()


###############################################################################

# На вход программе подаются две строки текста, содержащие по одному слову из перечня "камень", "ножницы", "бумага", "ящерица" или "Спок".
#  На первой строке записан выбор Тимура, на второй – выбор Руслана.

# Формат выходных данных
# Программа должна вывести результат жеребьёвки: кто победил - Тимур или Руслан, или они сыграли вничью.

# Примечание. Правила игры стандартные: ножницы режут бумагу. Бумага заворачивает камень.
# Камень давит ящерицу, а ящерица травит Спока, в то время как Спок ломает ножницы, которые, в свою очередь, отрезают голову ящерице, которая ест бумагу, на которой улики против Спока.
# Спок испаряет камень, а камень, разумеется, затупляет ножницы.

# a=input()
# b=input()
# с = a+"-"+b
# m =     {'камень-камень': 'ничья',
#     'камень-ножницы': 'Тимур',
#     'камень-бумага': 'Руслан',
#     'камень-ящерица': 'Тимур',
#     'камень-Спок': 'Руслан',
#     'ножницы-ножницы': 'ничья',
#     'ножницы-бумага': 'Тимур',
#     'ножницы-камень': 'Руслан',
#     'ножницы-ящерица': 'Тимур',
#     'ножницы-Спок': 'Руслан',
#     'бумага-бумага': 'ничья',
#     'бумага-камень': 'Тимур',
#     'бумага-ножницы': 'Руслан',
#     'бумага-ящерица': 'Руслан',
#     'бумага-Спок': 'Руслан',
#     'ящерица-ящерица': 'ничья'
#     , 'ящерица-Спок': 'Тимур',
#     'ящерица-ножницы': 'Руслан',
#     'ящерица-бумага': 'Тимур',
#     'ящерица-камень': 'Руслан',
#     'Спок-Спок': 'ничья',
#     'Спок-ножницы': 'Тимур',
#     'Спок-бамага': 'Руслан',
#     'Спок-камень': 'Тимур',
#     'Спок-ящерица': 'Руслан'}

# print(m[с])



###################################################################

# В текстовом файле посчитать количество строк, а также для каждой отдельной строки определить количество в ней символов и слов.


# f = open("z.txt", 'w')
# while True:
#     s = input()
#     if s =="":
#         break
#     f.write(s+"\n")
# f.close()

# f = open("z.txt",'r')
# count = 0
# for line in f :
#     count += 1
#     print(len(line))
# print(f'Кол-во строк в файле: {count}')
# f.close()


######################################################################


# Иван решил создать самый большой словарь в мире.
# Для этого он придумал функцию biggest_dict(**kwargs), которая принимает неограниченное количество параметров «ключ:
# значение» и обновляет созданный им словарь my_dict, состоящий всего из одного элемента «first_one» со значением «we can do it».
#  Воссоздайте эту функцию.
# тесты

# k1=22, k2=31, k3=11, k4=91
# name='Елена', age=31, weight=61, eyes_color='grey'

# our_dict = {"first_one":"we can do it"}

# def Biggest_dict(**kwargs):
#     our_dict.update(**kwargs)

# Biggest_dict(k1=22, k2=31, k3=11, k4=91)
# Biggest_dict(name='Елена', age=31, weight=61, eyes_color='grey')
# print(our_dict)

############################################################################################

# 1. Реализуйте алгоритм задания случайных чисел без использования встроенного генератора псевдослучайных чисел.


# import time  


# def GetRand(x,y):
#     count = y - x 
#     result =int(time.time())%count
#     return result + x

# print(GetRand(13,222))




###########################################################################

# 2. Задайте список. Напишите программу, которая определит, присутствует ли в заданном списке строк некое число.


# n = 5
# list = ['a', 'b', 'c', 'd', 5, 'e']

# find = list.count(n)
# if find > 0:
#     print('Да')
# else:
#     print('Нет')

  #альтернативное решение
# inp = list(map(str, input('Введите список: ').split()))
# inp = list('njkmnkl', 'ijhkj', 123)
# N = int(input('Введите искомое число: '))
# if str(N) in inp:
#     print(f'Число {N} есть в списке')
# else:
#     print(f'Числа {N} в списке нет')



######################################################################################################



# 3. Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет.


# *Пример:*

# - список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# - список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# - список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# - список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# - список: [], ищем: "123", ответ: -1


b = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
count = 0
for i in range(len(b)):
    if b[0] == b[i]:
        count += 1
        if count == 2:
            print(i+1)
            break